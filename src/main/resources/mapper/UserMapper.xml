<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hodehtml.demo.dao.UserDao">

    <!--resultMap对应的是表与实体类的映射  - type 数据库表对应的实体类，别名或完整类名都可以-->
    <resultMap id="BaseResultMap" type="com.hodehtml.demo.model.User">
        <!-- 结果集的主键 -->
        <result column="uuid" property="uuid" jdbcType="VARCHAR"/>
        <!-- 普通的列  -column 是数据库中字段， property是实体类中字段-->
        <result column="user_mobile" property="user_mobile" jdbcType="VARCHAR"/>
        <result column="valicode" property="valicode" jdbcType="VARCHAR"/>
        <result column="user_password" property="user_password" jdbcType="VARCHAR"/>
        <result column="token" property="token" jdbcType="VARCHAR"/>
        <result column="user_name" property="user_name" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_cloumn_List">
        uuid, user_mobile, valicode, user_password, token, user_name
    </sql>

    <select id="userMobileExists" resultMap="BaseResultMap">
        select
        <include refid="Base_cloumn_List"/>
        FROM user WHERE user_mobile = #{user_mobile,jdbcType=VARCHAR};
    </select>

    <insert id="inserUser">
        INSERT INTO User (uuid, user_mobile, valicode, user_password, token, user_name)
        VALUES (#{uuid,jdbcType=VARCHAR}, #{user_mobile,jdbcType=VARCHAR}, #{valicode,jdbcType=VARCHAR},
                #{user_password,jdbcType=VARCHAR}, #{token,jdbcType=VARCHAR}, #{user_name,jdbcType=VARCHAR});
    </insert>

    <update id="iforgot">
        UPDATE user
        SET user_password = #{user_password}, token = #{token}
        WHERE user_mobile = #{user_mobile};
    </update>

    <select id="login" resultMap="BaseResultMap">
        select
        <include refid="Base_cloumn_List"/>
        FROM user WHERE user_mobile = #{user_mobile,jdbcType=VARCHAR} AND user_password = #{user_password};
    </select>

</mapper>